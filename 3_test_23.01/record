Experiments Records in ISRL
Dec 5:
1. Time delay between publisher and subscriber, a little bit(1e-2) which can be ignored. 
2. Use message_filters to synchronize the subscribered topics information.
3. Show images published by realsense node publisher.
4. receiving the newest messages, queue size both set 1 in publisher and subscriber (actually the former be 1 is OK)

Dec 6:
1. Reader impinj needs activation for connecting to an extended hub.
2. To make sure no rfid information is left, queue_size is at least 15.

Dec 7, 8:
Bring together image using message filter and print out a picture together with an AOA.
Find papers, from Zihao to RFID to single object tracking.

Jan 19:
message_filter didn't work: rfid_msg has no attribute "header", including seq, stamp, frame_id
message_filter probably aligns the message according to header
try to add a header in rfid_msg

Jan 30:
fine tune P control in box-based tracking
: kp = -0.001 works well
check if header is in the same form, or newly added header is incomplete
: same form, seconds and nano-seconds, using 
Next plan:
1. run message filter and check if the messages align through time stamp
2. record data using P-controlled demo
3. transfer data to laptop 2

Feb 2:
Finish writing message filter with multiple sensor topics, pending testing.
Next plan:
1. test on 6 antenna arrays
2. transfer data to laptop 2
3. add depth alert into box based controller
4. more params in ros_navigation

Feb 3:
Add std_msgs/Header in rfid package
: if 'rfid_msg.h is not found' called, it may not be established instantly, try to compile for more times
: directory caution, #include "rfid/rfid_msg.h"
message filter for triple topics didn't work!!!

Feb 6:
Newly added .cpp & .launch file specially for box_controller. Only roslaunch will work while rosrun didn't work.
Pending testing on image subscription in cpp.
Next plan:
1. transfer to laptop 2
2. add distance detection and adapted linear speed

Mar 14:
Successfully added image subscriber into 'box_controller' and read depth stream.
Only central point of the bounding box is used as depth index, which works poor when at contours or bounding box fluctuations (bunches of zeros or maximum).
When the robot stops, some small disturbance exists.
When shooting on thin things like single-layer paper, will go through.
Next planï¼š
1. Find a trick (such as multi-point filter on fore/background, time-based smoothing) to obtain more reasonable depth information.
2. Add a flag as whether target exist within frame. If lost, keep turning and look for it. Former depth and center should be replaced.
3. Further improve the whole performance.
4. Make some record on data (graphs, etc.).
